<br id='myProjects'><br>
      
      <div style="background-color: #F1F3F6;">
      <div class="w3-container">
        <br><br>
        <h2 align='center' style="font-size:40px; font-family:Times-Italic;"><b><i>My Projects</i></b></h2>
        <br><br></div>
      
      <table align='center'>
        <tr><td><button class="w3-button w3-display-left w3-black" onclick="plusDivs(-1)">&#10094;</button>&nbsp;&nbsp;</td>
        <td><button class="w3-button w3-display-right w3-black" onclick="plusDivs(1)">&#10095;</button></td></tr>
      </table>
      <br/>

      <div class="w3-display-container mySlides">
        <h1 align='center' id='i3'>(1/23) &nbsp;&nbsp;&nbsp;<b>Shopping Cart - Web App</b></h1><br/>
        <p align='center'><img src="/images/shopping_cart.jpg" id='i2'></p>
        <div class="w3-display-topleft w3-large w3-container w3-padding-16 w3-black">
            
            <p align='center' style="font-size: 22px; font-family:Trebuchet MS;  line-height:35px;"><br/>I build a Shopping Cart using React Hooks<br><b>Concepts used in this code are:</b></br>
              ContactAPI, useContext hooks, useReducer hooks, useState hooks and axios<br>
            <b> Working model of the project:</b>
The complete Project is built with React Hooks & Modern JavaScript
Functionalities: - 
1) It fetches the shopping details from an API (json format)
2) User can update the cartby incrementing/decrementing count of each item
3) On above updation, the corresponding item price, total itme counts and total cart price also gets updated
4) Can perform CRUD Operations on Cart using ContextAPI, useContext, useReducer and useState Hooks
<br><a href='https://sahil0705.github.io/Shopping_Cart-React_Hooks/' target='_blank'>Web App Link</a><br>
<a href='https://github.com/Sahil0705/Shopping_Cart-React_Hooks' target='_blank'>Code Repository</a></p>
        </div>
      </div>


      <div class="w3-display-container mySlides">
        <h1 align='center' id='i3'>(2/23) &nbsp;&nbsp;&nbsp;<b>ToDo List - Web App</b></h1><br/>
        <p align='center'><img src="/images/todo.jpg" id='i2'></p>
        <div class="w3-display-topleft w3-large w3-container w3-padding-16 w3-black">
            
            <p align='center' style="font-size: 22px; font-family:Trebuchet MS;  line-height:35px;"><br/>I built a reponsive and user-friendly ToDo list app<br><b>Concepts used in this code are:</b></br>
                React Hooks & Redux - Action, Reducer, Store, Provider and useDispatch<br>
            <b> Working model of the project:</b>
            The user can 𝒂𝒅𝒅 𝒊𝒕𝒆𝒎𝒔, 𝒅𝒆𝒍𝒆𝒕𝒆 𝒊𝒕𝒆𝒎𝒔 𝒂𝒏𝒅 𝒖𝒑𝒅𝒂𝒕𝒆 𝒊𝒕𝒆𝒎𝒔.
The item list is been stored in the 𝗟𝗼𝗰𝗮𝗹 𝗦𝘁𝗼𝗿𝗮𝗴𝗲 of the browser, so whenever any operation is performed on the list, the list of Local Storage also gets updated.
Next time when the user opens the app again, the data from Local Storage is fetched and displayed. Also included both – 𝗟𝗶𝗴𝗵𝘁 𝗮𝗻𝗱 𝗗𝗮𝗿𝗸 𝘁𝗵𝗲𝗺𝗲𝘀

<br><a href='https://sahil0705.github.io/ToDoList-Redux/' target='_blank'>Web App Link</a><br>
<a href='https://github.com/Sahil0705/ToDoList-Redux' target='_blank'>Code Repository</a></p>
        </div>
      </div>


      <div class="w3-display-container mySlides">
        <h1 align='center' id='i3'>(3/23) &nbsp;&nbsp;&nbsp;<b>Real Time Tiffin Service - MERN App</b></h1><br/>
        <p align='center'><img src="/images/tiffin_app.png" id='i2'></p>
        <div class="w3-display-topleft w3-large w3-container w3-padding-16 w3-black">
            
            <p align='center' style="font-size: 22px; font-family:Trebuchet MS;  line-height:35px;"><br/>I built a reponsive and user-friendly Covid-19 Tracker<br><b>Concepts used in this code are:</b></br>
                Frontend : HTML5 - CSS3 - JavaScript - ECMASCript - React - Redux<br> Backend : RestFul API - NodeJS - ExpressJS<br>Database: NoSQL (MongoDB)<br>
            <b> Working model of the project:</b>
            Used for Real Time Tiffin Service Business (Vaishnavi Tiffin Service, Mumbai-400 058)
Filter Food Menu Gallery - Breakfast/Lunch/Snacks/Dinner - Veg/Non-Veg - useState, useEffect, useContext Hooks
RESTFul APIs: Users Api, Food Api, User Cart Api, Contact Us Api - Express Routers, MongoDB, Postman
<br><a href='https://sahil0705.github.io/Tiffin-Service-MERN_App/' target='_blank'>Web App Link</a><br>
<a href='https://github.com/Sahil0705/Tiffin-Service-MERN_App' target='_blank'>Code Repository</a></p>
        </div>
      </div>



      <div class="w3-display-container mySlides">
        <h1 align='center' id='i3'>(4/23) &nbsp;&nbsp;&nbsp;<b>Live Search Weather Web App</b></h1><br/>
        <p align='center'><img src="/images/weather_app.png" id='i2'></p>
        <div class="w3-display-topleft w3-large w3-container w3-padding-16 w3-black">
            
            <p align='center' style="font-size: 22px; font-family:Trebuchet MS;  line-height:35px;"><br/>I built a reponsive and user-friendly Live Search Weather App<br><b>Concepts used in this code are:</b></br>
                Real Time Api - JavaScript - ReactJS<br>
            <b> Working model of the project:</b>
            As an when the user types the city name, the entire weather report for that city is been fetched through a 𝐑𝐞𝐚𝐥-𝐭𝐢𝐦𝐞 𝐀𝐏𝐈 and is being displayed. From these Apps, I learnt the concepts of - Functional 𝐂𝐨𝐦𝐩𝐨𝐧𝐞𝐧𝐭𝐬, 𝐏𝐫𝐨𝐩𝐬 in React, Handling 𝐄𝐯𝐞𝐧𝐭𝐬 in it and 𝐀𝐱𝐢𝐨𝐬 to fetch data from the API.
            I used 𝑹𝒆𝒂𝒄𝒕 𝑯𝒐𝒐𝒌𝒔 for dynamic updation of data and passing of data from one component to other, where I got to understand about the
            𝐮𝐬𝐞𝐒𝐭𝐚𝐭𝐞, 𝐮𝐬𝐞𝐏𝐚𝐫𝐚𝐦𝐬 and 𝐮𝐬𝐞𝐄𝐟𝐟𝐞𝐜𝐭 𝐇𝐨𝐨𝐤𝐬
<br><a href='https://sahil0705.github.io/Weather_Web_App-ReactJS/' target='_blank'>Web App Link</a><br>
<a href='https://github.com/Sahil0705/Weather_Web_App-ReactJS' target='_blank'>Code Repository</a></p>
        </div>
      </div>


      <div class="w3-display-container mySlides">
        <h1 align='center' id='i3'>(5/23) &nbsp;&nbsp;&nbsp;<b>Google Keep App Clone - Web App</b></h1><br/>
        <p align='center'><img src="/images/Google_Keep2.jpeg" id='i2'></p>
        <div class="w3-display-topleft w3-large w3-container w3-padding-16 w3-black">
            
            <p align='center' style="font-size: 22px; font-family:Trebuchet MS;  line-height:35px;"><br/>I built a reponsive and user-friendly Covid-19 Tracker<br><b>Concepts used in this code are:</b></br>
              React Hooks & Redux - Action, Reducer, Store, Provider and useDispatch<br>
            <b> Working model of the project:</b>
            I built a 𝐆𝐨𝐨𝐠𝐥𝐞 𝐊𝐞𝐞𝐩 𝐂𝐥𝐨𝐧𝐞 using 𝑹𝒆𝒂𝒄𝒕𝑱𝑺, 𝑹𝒆𝒅𝒖𝒙 𝒂𝒏𝒅 𝑴𝒂𝒕𝒆𝒓𝒊𝒂𝒍-𝑼𝑰
 
Users can Create, Read, Update and Delete Notes (𝘾𝙍𝙐𝘿).
A Note can also be copied to clipboard.
Notes are been stored in the 𝑳𝒐𝒄𝒂𝒍 𝑺𝒕𝒐𝒓𝒂𝒈𝒆 of the browser, so whenever any operation is performed on any note, Local Storage gets updated.
Next time when the user opens the app again, the notes from Local Storage is fetched and displayed. Also included both – 𝗟𝗶𝗴𝗵𝘁 𝗮𝗻𝗱 𝗗𝗮𝗿𝗸 𝗧𝗵𝗲𝗺𝗲𝘀
 
I used 𝒖𝒔𝒆𝑺𝒕𝒂𝒕𝒆 𝑯𝒐𝒐𝒌𝒔 for dynamic rendering of data and
𝒖𝒔𝒆𝑬𝒇𝒇𝒆𝒄𝒕 𝑯𝒐𝒐𝒌𝒔 for setting up the notes in the Local Storage.
With the help of 𝐑𝐞𝐝𝐮𝐱, I managed the states of Notes and themes.
I also used '𝑬𝒍𝒆𝒎𝒆𝒏𝒕.𝒔𝒄𝒓𝒐𝒍𝒍𝑰𝒏𝒕𝒐𝑽𝒊𝒆𝒘()', which automatically scrolls the page to any newly added note or to any edited note.
 
From this project, I understood the usage of 𝐌𝐚𝐭𝐞𝐫𝐢𝐚𝐥-𝐔𝐈 with React and the Redux concepts of Action, Reducer, Store, useSelector and useDispatch.
<br><a href='https://sahil0705.github.io/Google_Keep_Clone-React_Redux/' target='_blank'>Web App Link</a><br>
<a href='https://github.com/Sahil0705/Google_Keep_Clone-React_Redux' target='_blank'>Code Repository</a></p>
        </div>
      </div>


      <div class="w3-display-container mySlides">
        <h1 align='center' id='i3'>(6/23) &nbsp;&nbsp;&nbsp;<b>Filter Food Menu Gallery - Web App</b></h1><br/>
        <p align='center'><img src="/images/food_img_glry2.png" id='i2'></p>
        <div class="w3-display-topleft w3-large w3-container w3-padding-16 w3-black">
            
            <p align='center' style="font-size: 22px; font-family:Trebuchet MS;  line-height:35px;"><br/>I built a reponsive and user-friendly Covid-19 Tracker<br><b>Concepts used in this code are:</b></br>
              HTML5, CSS3, JavaScript and ReactJS<br>
            <b> Working model of the project:</b>
            It has options to filter the food menu based on 2 main Categories - Veg and Non-Veg items. Further the user can also filter down the Veg or Non-Veg items into Breakfast, Lunch, Snacks and Dinner. From these Apps, I learnt the concepts of - Functional 𝐂𝐨𝐦𝐩𝐨𝐧𝐞𝐧𝐭𝐬, 𝐏𝐫𝐨𝐩𝐬 in React, Handling 𝐄𝐯𝐞𝐧𝐭𝐬 in it and 𝐀𝐱𝐢𝐨𝐬 to fetch data from the API.
            I used 𝑹𝒆𝒂𝒄𝒕 𝑯𝒐𝒐𝒌𝒔 for dynamic updation of data and passing of data from one component to other, where I got to understand about the
            𝐮𝐬𝐞𝐒𝐭𝐚𝐭𝐞, 𝐮𝐬𝐞𝐏𝐚𝐫𝐚𝐦𝐬 and 𝐮𝐬𝐞𝐄𝐟𝐟𝐞𝐜𝐭 𝐇𝐨𝐨𝐤𝐬
<br><a href='https://sahil0705.github.io/Filter_Food_Menu_Gallery-ReactApp/' target='_blank'>Web App Link</a><br>
<a href='https://github.com/Sahil0705/Filter_Food_Menu_Gallery-ReactApp' target='_blank'>Code Repository</a></p>
        </div>
      </div>








      
      <div class="w3-display-container mySlides">
        <h1 align='center' id='i3'>(7/23) &nbsp;&nbsp;&nbsp;<b>Weather Web App using API</b></h1><br/>
        <p align='center'><img src="/images/weather.png" id='i2'></p>
        <div class="w3-display-topleft w3-large w3-container w3-padding-16 w3-black">
            
            <p align='center' style="font-size: 22px; font-family:Trebuchet MS;  line-height:35px;"><br/>I built a reponsive and user-friendly Weather Web App which includes both front-end and back-end both<br><b>Concepts used in this code are:</b></br>
                Frontend : HTML5 - CSS3 - JavaScript - ECMASCript<br> Backend : NodeJS - ExpressJS<br>
            <b> Working model of the project:</b>
            I built this Weather App using NodeJS as Back-end, ExpressJS as a back-end web framework, ECMAScript and a Real-Time API.
On entering any city name, the user gets the entire weather report for that city - such as current temperature, Min/Max temperature, Climate status, Humidity, Pressure, Visibility and Wind Speed
Included a separate 404 error page (if routed to wrong path)

From this project, I understood the concepts of NPM, Handling HTTP requests, Stream Pipes and ExpressJS routing
For rendering dynamic web pages, I used the Template Engines-(Handlebars)
Implemented the DRY concept using Partials in ExpressJS
Used Async-Await function of ECMAScript for the API
<br><a href='https://weather-app-wuop.onrender.com/weather' target='_blank'>Web App Link</a><br>
<a href='https://github.com/Sahil0705/Weather_Stand' target='_blank'>Code Repository</a></p>
        </div>
      </div>

      <div class="w3-display-container mySlides">
        <h1 align='center' id='i3'>(8/23) &nbsp;&nbsp;&nbsp;<b>Covid-19 Tracker - Web App</b></h1><br/>
        <p align='center'><img src="/images/covidtracker.png" id='i2'></p>
        <div class="w3-display-topleft w3-large w3-container w3-padding-16 w3-black">
            
            <p align='center' style="font-size: 22px; font-family:Trebuchet MS;  line-height:35px;"><br/>I built a reponsive and user-friendly Covid-19 Tracker<br><b>Concepts used in this code are:</b></br>
                Frontend : HTML5 - CSS3 - JavaScript - jQuery - ECMASCript <br> Backend : Real-Time API<br>
            <b> Working model of the project:</b>
            I build a Covid-19 Tracker using the Real-Time API
The complete Project is built with Modern JavaScript / ECMAScript (6/7/8/9) & jQuery
Following are the features which I used: -
Fetch-API, Async-Await, Promises, Scope Chain & Lexical Scoping, Callback/Fat-Arrow, map, filter/reduce functions, Closure and Template strings, Event-Listeners and Auto-Complete widget (jQuery)
Functionalities: - 
1) The web app shows the number of Covid19 Cases Worldwide, Country wise & State-wise (India)
2) The data for the country and state wise cases is been fetched through a Real-time API
3) Since the API is been updated frequently, so the data on my web app also gets updated
4) The data can be filtered based on state names or country names
5) The data involves the Total Active Cases, Total Deaths, Newly Active, Delta Confirmed, Delta Active, Delta Recovered, etc.)
6) Apart from all, it also describes the Symptoms and the Preventive measures to be taken
<br><a href='https://sahil0705.github.io/Covid-19_Tracker/' target='_blank'>Web App Link</a><br>
<a href='https://github.com/Sahil0705/Covid-19_Tracker' target='_blank'>Code Repository</a></p>
        </div>
      </div>

      <div class="w3-display-container mySlides">
        <h1 align='center' id='i3'>(9/23) &nbsp;&nbsp;&nbsp;<b>Google Keep App Clone - Web App</b></h1><br/>
        <p align='center'><img src="/images/Google_Keep1.png" id='i2'></p>
        <div class="w3-display-topleft w3-large w3-container w3-padding-16 w3-black">
            
            <p align='center' style="font-size: 22px; font-family:Trebuchet MS;  line-height:35px;"><br/>I built a reponsive and user-friendly Google Keep App Clone<br><b>Concepts used in this code are:</b></br>
                Frontend : HTML5 - CSS3 - JavaScript - ECMASCript<br>
            <b> Working model of the project:</b>
            Built a Google Keep App Clone using the ECMAScript features, JavaScript Local Storage and DOM Manipulations

User can Add Notes and save it for future reference
Any note can be Created, Read, Updated, Deleted (CRUD)

No need to create any account for saving notes
Every saved note will be stored securely in the browser's local storage

Users should make sure to save the changes made in any note, otherwise the changes will not be reflected in the local storage
Any empty note will automatically be deleted

Whenever the user visits this web app again, then the previously saved notes by the user will be fetched from the local storage and will be shown to the user as it is
<br><a href='https://sahil0705.github.io/Google-Keep-Clone/' target='_blank'>Web App Link</a><br>
<a href='https://github.com/Sahil0705/Google-Keep-Clone' target='_blank'>Code Repository</a></p>
        </div>
      </div>

      <div class="w3-display-container mySlides">
        <h1 align='center' id='i3'>(10/23) &nbsp;&nbsp;&nbsp;<b>MUSIFY - Music Player</b></h1><br/>
        <p align='center'><img src="/images/music.jpg" id='i2'></p>
        <div class="w3-display-topleft w3-large w3-container w3-padding-16 w3-black">
            
            <p align='center' style="font-size: 22px; font-family:Trebuchet MS;  line-height:35px;"><br/>I built a reponsive and user-friendly Music Player Web App<br><b>Concepts used in this code are:</b></br>
                Frontend : HTML5 - CSS3 - JavaScript - ECMAScript
            <br><b> Working model of the project:</b>
            I build a Music Player web app using Modern JavaScript / ECMAScript (6/7/8/9) named as Musify
Following are the features which I used: -
TimeUpdate events, font-awesome icons, keyframe animations, sliders, Scope Chain & Lexical Scoping, Callback/Fat-Arrow/ map/ filter/reduce functions, Object De-structuring, Closures, Template strings and Event-Listeners
Any of the default Music controls are not been used. All controls are built from scratch (customized)
It has the following features: -
1) It has 6 songs currently
2) Slider/status bar (showing the completion of the song at any time) & Current time of each song is been updated dynamically at every 1 sec
3) Play & Pause icons are been toggled on playing / pausing of the song
4) Next & Previous icons can be used to switch the current song with the next & previous songs respectively in the queue
5) After the end of any song, automatically the next song in the queue is been played
6) After the end of all songs in the queue, again the loop starts from the beginning i.e., 1st song is been played
7) The volume can be adjusted from 0 to 100% using the slider (for volume)
8) The volume can be muted or unmuted using the volume icon
9) Tried to make the UI as modern as possible
            <br><a href='https://sahil0705.github.io/Musify-Music_Player/' target='_blank'>Web App Link</a><br>
            <a href='https://github.com/Sahil0705/Musify-Music_Player' target='_blank'>Code Repository</a></p>
        </div>
      </div>

      <div class="w3-display-container mySlides">
        <h1 align='center' id='i3'>(11/23) &nbsp;&nbsp;&nbsp;<b>RESTFul API for MENS 100m Race</b></h1><br/>
        <p align='center'><img src="/images/restapi.png" id='i2'></p>
        <div class="w3-display-topleft w3-large w3-container w3-padding-16 w3-black">
            
            <p align='center' style="font-size: 22px; font-family:Trebuchet MS;  line-height:35px;"><br/>I built a RESTFul API which includes front-end, back-end and database<br><b>Concepts used in this code are:</b></br>
                Frontend : HTML5 - CSS3 - JavaScript - ECMASCript<br> Backend : NodeJS - ExpressJS - POSTMAN <br> Database : MongoDB<br>
            <b> Working model of the project:</b>
            Created my first RESTful API, which shows the ranking of the athletes for the Mens 100m race
This API fetches the data from MongoDB (Atlas) DB and gives it to the user/client when a request is made on '/mens' route

Firstly, the data is inserted into a MongoDB database collection through Postman and the API fetches the data from this DB
Then we can easily perform CRUD operations through Postman which will affect the database and accordingly the API will fetch the updated data from the DB

I used NodeJS & ExpressJS as back-end and Mongoose for connecting the node application through MongoDB atlas and providing DB Schema and validations.
I used ExpressJS Routers for different HTTP requests

From this project, I understood the working of MongoDB queries, connecting MongoDB DB to a node/express app, providing Schemas and Validations through Mongoose.
I also learnt about handling POST/GET/PATCH/DELETE requests in RESTful API through Postman
            <br><a href='https://mens100mtr-restapi-sahil.onrender.com/mens' target='_blank'>API Link</a><br>
            <a href='https://github.com/Sahil0705/RESTfulApi' target='_blank'>Code Repository</a></p>
        </div>
      </div>
      
      <div class="w3-display-container mySlides">
        <h1 align='center' id='i3'>(12/23) &nbsp;&nbsp;&nbsp;<b>E-commerce - Web App</b></h1><br/>
        <p align='center'><img src="/images/onlineshopping.jpg" id='i2'></p>
        <div class="w3-display-topleft w3-large w3-container w3-padding-16 w3-black">
            
            <p align='center' style="font-size: 22px; font-family:Trebuchet MS;  line-height:35px;"><br/>I built a reponsive and user-friendly e-commerce shopping website which includes both front-end and back-end both<br><b>Concepts used in this code are:</b></br>
                Frontend : HTML5 - CSS3 - JavaScript - <br> Backend : PHP <br> Database : MySQL<br>
            <b> Working model of the project:</b>
            1. Firstly there is a home page just for viewing
            2. Then the user must register himeself and login for buying the products 
            3. There is an option given to update the details of the user,forgot pass  and update password
            4. User can select many products at a time and collect his/her products in the cart and go for buying all 
            5. Finally after payment the user gets a reciept
            6. The user can view all his orders which he/she has bought till date.
            <br><a href='https://drive.google.com/file/d/116Zx-YiQbtEnM5-luutiiAc4sJUX1lvl/view?usp=sharing' target='_blank'>Have a Look</a><br>
            <a href='https://github.com/Sahil0705/Quick_Store' target='_blank'>Code Repository</a></p>
        </div>
      </div>
      
      <div class="w3-display-container mySlides">
        <h1 align='center' id='i3'>(13/23) &nbsp;&nbsp;&nbsp;<b>EAST (Easy & Secure Test) Quiz - Web App (Team of 4)</b></h1><br/>
        <p align='center'><img src="/images/quiz.jpg" id='i2'></p>
        <div class="w3-display-topleft w3-large w3-container w3-padding-16 w3-black">
            
            <p align='center' style="font-size: 22px; font-family:Trebuchet MS;  line-height:35px;"><br/>I and my 3 teammates built a reponsive and user-friendly e-quiz website which includes both front-end and back-end both<br><b>Tools and Concepts used in this code are:</b></br>
                Frontend languages - HTML5 - CSS3 - JavaScript - <br> Backend language - PHP<br>
            <b> Description of the project:</b>
            Myself, Sahil Donde and my teammate Ninad Topale, Sangramjit Hazarika and Krunal Kumbhare worked on a Web Development Project. 
            We built an Online Quiz Portal which would be beneficial to all the schools and colleges who don't have any facility to take the 
            examination sector in to a full fleshed online mode. This portal would have 2 main sections - Faculty and Students. Each of the 
            faculty and Students of the schools/colleges who wants to avail our services needs to register in our portal.Faculty can set the 
            question paper and the exam timing. After setting the test/quiz, a unique test id would be generated which would be given to only 
            those who are under that faculty. Once the student enters the test id at the scheduled time only then the student can attempt the 
            test. After the test, the student can see the result and can see where he has done the mistake. The evaluation of the test will 
            done by the faculty on the other side. There is also an option of chat where faculties and students can chat among themselves for 
            any doubt clearification.<br><a href='https://drive.google.com/file/d/1lgXtluyoxBliyseTAcPtziXFBCBdUCf3/view' target='_blank'>Have a Look</a><br>
            <a href='https://github.com/Sahil0705/EAST_Quiz-Web-Portal/tree/main/EAST%20-%20Quiz%20Web%20Portal' target='_blank'>Code Repository</a></p>
        </div>
      </div>

      <div class="w3-display-container mySlides">
        <h1 align='center' id='i3'>(14/23) &nbsp;&nbsp;&nbsp;<b>Snakes & Ladders - Game</b></h1><br/>
        <p align='center'><img src="/images/snake.jpg" id='i2'></p>
        <div class="w3-display-middle w3-large w3-container w3-padding-16 w3-black">
          
            <p align='center' style="font-size: 22px; font-family:Trebuchet MS;  line-height:35px;"><br/>I wrote a python program to play text-based snake and ladder game in the terminal.<br><b>Concepts used in this code are:</b><br>
              - Dictionary
              - List
              - Generating random number
              - Selecting a Random value from a list
              - Adding wait/sleep in program
              - Conditional Statements i.e. IF and ELSE
              - Getting input from user<br>
              <b>What is happening in Game:</b><br>
              1- Display the welcome message
              2- Collect the player's names
              3- Until one of the player wins do the following:
              3.1- Roll the dice
              3.2- Move the player forward for the value got on the dice roll.
              3.3- If the player is on snake's head, move down to its tail
              3.4- If the player is on ladder's bottom, take it to its top
              3.5- else remain there and let the second player roll the dice<br>Click the given link and download the game and make sure you open it in a desktop <a href='https://drive.google.com/file/d/1yLYlGRoCGHSOD0sqoOIXuIkzTqHF7tHh/view' target="_blank">.<br/>Download the Game</a><br>
              </p>
        </div>
      </div>

      <div class="w3-display-container mySlides">
        <h1 align='center' id='i3'>(15/23) &nbsp;&nbsp;&nbsp;<b>Notepad Clone - Desktop App</b></h1><br/>
        <p align='center'><img src="/images/notepad.jpg" id='i2'></p>
        <div class="w3-display-topleft w3-large w3-container w3-padding-16 w3-black">
            
            <p align='center' style="font-size: 22px; font-family:Trebuchet MS;  line-height:35px;"><br/>I built a Desktop based Application - Notepad Clone using the Swing library of Java. <br><b>Tools and Concepts used in this code are:</b></br>
                Java - Swing<br>
            <b> Description of the project:</b>
            Built a Notepad clone using the file handling concepts and the swing library which is built on top of the Java AWT
Got to learn many new things while implementing the same
Functionalities included: -
1) Saving the file
2) Opening the existing file
3) Editable operations like Undo and Redo
4) Wrapping the lines and the words
5) Changing the font size, font style and font family of the text
6) Changing the background and foreground color<br><a href='https://drive.google.com/file/d/1deAastnvyNbHk_8W4AInh04Vtq6z1chq/view' target='_blank'>Have a Look</a><br>
<a href='https://github.com/Sahil0705/Notepad-Java_Desktop_App/tree/main/Notepad%20-%20Java%20Desktop%20App' target='_blank'>Code Repository</a></p>
        </div>
      </div>

      <div class="w3-display-container mySlides">
        <h1 align='center' id='i3'>(16/23) &nbsp;&nbsp;&nbsp;<b>Banking - Web App (Team of 2)</b></h1><br/>
        <p align='center'><img src="/images/bank.jpg" id='i2'></p>
        <div class="w3-display-topleft w3-large w3-container w3-padding-16 w3-black">
            
            <p align='center' style="font-size: 22px; font-family:Trebuchet MS;  line-height:35px;"><br/>I and my teammate built a reponsive and user-friendly e-bank website which includes both front-end and back-end both<br><b>Tools and Concepts used in this code are:</b></br>
                Frontend languages - HTML5 - CSS3 - JavaScript - <br> Backend language - PHP<br>
            <b> Description of the project:</b>
            Myself, Sahil Donde and my teammate Krunal Kumbhare worked on a Web Development Project. We built an Online Banking Portal where you can transfer money to other users, can have a close watch on all your transactions, open a fixed deposit and apply for loans. We have also include the employee side of the system where the employee can view the user details and can approve/disapprove the loans based on the EMI
Frontend: - HTML, CSS and JS, Backend: - PHP, Database: - MySQL<br><a href='https://drive.google.com/file/d/1pO2IbsqlGQ1qaC_davW4yYqHPYYCr-0t/view' target='_blank'>Have a Look</a><br>
<a href='https://github.com/Sahil0705/Surakshit_Bank/tree/main/Banking' target='_blank'>Code Repository</a></p>
        </div>
      </div>

      <div class="w3-display-container mySlides">
        <h1 align='center' id='i3'>(17/23) &nbsp;&nbsp;&nbsp;<b>RIVA - Virtual Assistant (Team of 3)</b></h1><br/>
        <p align='center'><img src="/images/virtual_Ass.png" id='i2'></p>
        <div class="w3-display-topleft w3-large w3-container w3-padding-16 w3-black">
            
            <p align='center' style="font-size: 22px; font-family:Trebuchet MS;  line-height:35px;"><br/>Our team built a Virtual Assistant - RIVA (RealTime Interactive Virtual Assistant). <br><b>Tools and Concepts used in this code are:</b></br>
              Python Framework - Speech Recognition using Google APIs.<br>
            <b> Description of the project:</b>
            Myself, Sahil Donde and my teammates Sangramjit Hazarika and Ninad Topale worked on a Desktop based App Project. We have designed a virtual helper using Python as the programming language and PyCharm as the Platform or the environment. The system will basically perform the stuff we want it to do. The system have more user-friendly UI so that the users find this a way to have fun in his/her leisure time. RIVA is more interactive such that the user feels that they are talking to another person right in front of him/her.

The RIVA make the system search for a song from the user’s playlist and also play videos on YouTube . Search anything on internet, send emails to the recipients, open Facebook, WhatsApp and also open many other desktop related applications on the local machine. RIVA search for the meaning of the Jargon words only if the user wants it to do so. Generally the voice bots find it difficult to differentiate between lower and upper case meaning of a capitonym word.

In short, Responding to routine customer queries, dispensing information, and collecting customer details are some of the features of RIVA
            <br><a href='https://drive.google.com/file/d/1xLgDc2jfu9-c_fzQqRSLYZwKXhDf_K13/view?usp=sharing' target='_blank'>Have a Look</a><br>
            <a href='https://github.com/Sahil0705/RIVA-RealTime_Interactive_Virtual_Assistant/tree/main/RIVA-(Real%20Time%20Interacting%20Virtual%20Assistant%20)' target='_blank'>Code Repository</a></p>
        </div>
      </div>

      <div class="w3-display-container mySlides">
        <h1 align='center' id='i3'>(18/23) &nbsp;&nbsp;&nbsp;<b>Snake eating Food - Game</b></h1><br/>
        <p align='center'><img src="/images/snake.jpg" id='i2'></p>
        <div class="w3-display-topleft w3-large w3-container w3-padding-16 w3-black">
            
            <p align='center' style="font-size: 22px; font-family:Trebuchet MS;  line-height:35px;"><br/>I built a Graphical based Snake Game using the Turtle library of Python. <br><b>Tools and Concepts used in this code are:</b></br>
                Turtle library of Python<br>
            <b> Description of the project:</b>
            Here as the snake grows bigger in size, you will notice that its speed reduces.
Here everything in the screen is a turtle - head of the snake, body of the snake and also the food.
When the snake eats the food, a turtle in the form a body is been attached to the snake.
The user will be out only when the head of the snake touches any of the body turtle.
For the boundaries I haven't declared the user as out, instead the snake can pass through the boundary and would come out from the opposite side of the boundary.<br><a href='https://drive.google.com/file/d/1_V13ih2oTxWTRL887r-SgN0MfEfgkFPr/view' target='_blank'>Have a Look</a><br>
</p>
        </div>
      </div>

      <div class="w3-display-container mySlides">
        <h1 align='center' id='i3'>(19/23) &nbsp;&nbsp;&nbsp;<b>APET - Expense Tracker (Team of 3)</b></h1><br/>
        <p align='center'><img src="/images/expense_tracker.png" id='i2'></p>
        <div class="w3-display-topleft w3-large w3-container w3-padding-16 w3-black">
<!--             
            <p align='center' style="font-size: 22px; font-family:Trebuchet MS;  line-height:35px;"><br/>I built a Graphical based Snake Game using the Turtle library of Python. <br><b>Tools and Concepts used in this code are:</b></br>
                Turtle library of Python<br>
            <b> Description of the project:</b>
            Here as the snake grows bigger in size, you will notice that its speed reduces.
Here everything in the screen is a turtle - head of the snake, body of the snake and also the food.
When the snake eats the food, a turtle in the form a body is been attached to the snake.
The user will be out only when the head of the snake touches any of the body turtle.
For the boundaries I haven't declared the user as out, instead the snake can pass through the boundary and would come out from the opposite side of the boundary.<br><a href='https://drive.google.com/file/d/1_V13ih2oTxWTRL887r-SgN0MfEfgkFPr/view' target='_blank'>Have a Look</a><br>
</p> -->
        </div>
      </div>

      <div class="w3-display-container mySlides">
        <h1 align='center' id='i3'>(20/23) &nbsp;&nbsp;&nbsp;<b>Tic-Tac-Toe - Game</b></h1><br/>
       <p align='center'><img src="/images/tictactoe.jpg" id='i2'></p>
        <div class="w3-display-topright w3-large w3-container w3-padding-16 w3-black">
            
            <p align='center' style="font-size: 22px; font-family:Trebuchet MS;  line-height:35px;"><br/>I made a user friendly Tic-Tac-Toe game using C++, majorly using arrays concept.<br><b>Concepts used in this code are:</b><br>-1D Arrays - 2D Arrays - Generating random number - - Conditional Statements i.e. IF and ELSE
              - Getting input from user - Adding wait/sleep in program - Conditional loops<br>
              <b>What is happening in the Game: </b><br>
              1- Display the welcome message
              2- Collect the player's names
              3- Until one of the player wins do the following:
              3.1- A toss happens and whoever wins the toss will start first
              3.2- Users have the option of choosing x/0
              3.3- As soon as all 3 rows/columns of a user is filled by the same character that user wins.
              3.4- If no one wins then the game stops with the message saying that match drawn<br>Click the given link and download the game and make sure you open it in a desktop.<br/> <a href='https://drive.google.com/file/d/11-gMvSbDmat6ehWu0JKjmOd6ktG0MDq-/view?usp=sharing' target="_blank">Download the Game</a><br>
              </p>
        </div>
      </div>
      
      <div class="w3-display-container mySlides">
        <h1 align='center' id='i3'>(21/23) &nbsp;&nbsp;&nbsp;<b>Operating System - Desktop App (Team of 3)</b></h1><br/>
        <p align='center'><img src="/images/os.png" id='i2'></p>
        <div class="w3-display-topleft w3-large w3-container w3-padding-16 w3-black">
            
            <p align='center' style="font-size: 22px; font-family:Trebuchet MS;  line-height:35px;"><br/>I and my 2 teammates built a Desktop based Application - Operating System - A study tool  using the Swing library of Java.<br><b>Tools and Concepts used in this code are:</b></br>
                Java - Swing, MySQL Database<br>
            <b> Description of the project:</b>
            Myself, Sahil Donde and my teammates Sangramjit Hazarika and Ninad Topale worked on a Desktop based App Project. We built an Operating System - Virtual Machine where our system would have various small applications like calculator, calendar, alarm clock, stop watch, mailbox, etc.
We have the Task Manager as it is one of the OS concept in our system. Apart from this we have also implemented the conecpt of caching. Only that application which would be used the most no. of times by the user would be present in the cache memory.
The main intention to go for this project is that to understand the OS concepts to the users in a more practical and in fun way. This can be useful to those who don't have any computer knowledege. As just by reading the concepts they won't get it. So using our VM, they can get the live demo of how the OS allots memory and releases it. Also they would understand the concept of caching
Each of these applications which I mentioned would take some amount of memory consumption and CPUs attention. So to manage the memory and CPU along with the applications we have come up with a app named Task Manager where we can monitor the memory consumption and the CPUs attention to each of the opened apps. The task manager also keeps the track of the no. of tabs opened and thus updates the CPU and memory consumption accordingly in the task manager. We have tried to make it dynamic so that if any tab is opened or closed then the values would be affected then and there. Similarly if any tab is closed so, that much amount of CPUs attention would be released and parallely the memory would also be released which was alloted to that app.
Also, we have set a limit of RAM. So, if the RAM size exceeds the limit and if we try to open another app, then from among the apps opened the app which has less priority would be closed and the new app will be opened.<br><a href='https://drive.google.com/file/d/1pO2IbsqlGQ1qaC_davW4yYqHPYYCr-0t/view' target='_blank'>Have a Look</a><br>
<a href='https://github.com/Sahil0705/Virtual_PC' target='_blank'>Code Repository</a></p>
        </div>
      </div>

      <div class="w3-display-container mySlides">
        <h1 align='center' id='i3'>(22/23) &nbsp;&nbsp;&nbsp;<b>Housing Real Estate - Desktop App (Team of 3)</b></h1><br/>
        <p align='center'><img src="/images/realestate1.png" id='i2'></p>
        <div class="w3-display-topleft w3-large w3-container w3-padding-16 w3-black">
            
            <p align='center' style="font-size: 22px; font-family:Trebuchet MS;  line-height:35px;"><br/>I and my 2 teammates built a Desktop based Application - Real Estate App using the Swing library of Java.<br><b>Tools and Concepts used in this code are:</b></br>
                Java - Swing, MySQL Database<br>
            <b> Description of the project:</b>
            Myself, Sahil Donde and my teammates Sangramjit Hazarika and Ninad Topale worked on a Desktop based App Project. We built an Online Real Estate Portal where First, any user which is interest in either buying or selling the house registers on the portal with the basic required details. Once he is been registered then he needs to login with the help of the credentials set by him at the time of registration
So, all home seller, home buyers, renters and tenants become registered users. After login the user needs to select one of the 4 roles.
For a home seller, he needs to list the houses for selling by giving all the details like house location, landmarks, price, room size and also, he needs to give the bank details of his account as the money received by the portal by the buyers needs to be transferred to the account of the corresponding seller. The same case goes with the renters, just he needs to give the monthly rent along with other details
For a home buyer, he would see a list of all the houses available on the portal listed by all sellers. He can filter the houses by setting the priorities based on the landmarks, location and price. For a complete detailed information of a particular house, he needs to click the house and can view.
Then he can go for the payment and by entering the account no, MICR code and the IFSC code and also the monthly debited money from the buyer’s account. So, the entered monthly amount will be auto debited every month from the buyer’s account and be transferred to our account which would be transferred to the corresponding seller. Same goes with the tenants. At the end the buyer and the seller are been given a confirmation email about the status of the transaction for the house
<br><a href='https://drive.google.com/file/d/1ngPVNQcuQ36elhR7jn7fxAnblSzOmxmf/view?usp=sharing' target='_blank'>Have a Look</a><br>
<a href='https://github.com/Sahil0705/Housing_Real_Estate' target='_blank'>Code Repository</a></p>
        </div>
      </div>

      <div class="w3-display-container mySlides">
        <h1 align='center' id='i3'>(23/23) &nbsp;&nbsp;&nbsp;<b>Hiking Buddies - Web App (Team of 3)</b></h1><br/>
        <p align='center'><img src="/images/travel.jpg" id='i2'></p>
        <div class="w3-display-topleft w3-large w3-container w3-padding-16 w3-black">
            
            <p align='center' style="font-size: 22px; font-family:Trebuchet MS;  line-height:35px;"><br/>I and my 2 teammates built a Travel Agency Web App - Hiking Buddies<br><b>Tools and Concepts used in this code are:</b></br>
              Frontend : HTML5 - CSS3 - JavaScript - <br> Backend : PHP <br> Database : MySQL<br>
            <b> Description of the project:</b>
            In this project we have used various types of languages including PHP, CSS, HTML etc. We have created the home page using HTML code which consists of the tabs including the About Us, Home and Login. We have created the branch page using HTML code under About Us tab. The user can get to know various types of transports by clicking on the Transports tab under Home tab. The Transport page is also being created using HTML code. In Transport page we have linked each and every airlines or Railways to their official sites. Then we have created the package page which will help tourists to suggest the best Travel Package along with various types of discounts for domestic and foreign trips.

            So, basically firstly the user has to log in if he/she has an account previously. However if they are new to this website they have to create an account by going to the sign up page. After filling the required credentials the user will get a mail stating that he has become a member of this agency “Hiking Buddies” along with his username and password for proceeding further. We have created this using PHP and PHP Mailer. The user’s details will then be collected in a Database for future use. After signing in, the user has to login using their username and password.
            
            We have created database almost for each and every page right from branch, signup, employee, package to insurance. We have also made use of session management which will create individual session id i.e. the user’s details will be carried forward throughout the particular session. After the final payment along with g-mail, we also receipt a transcript which includes the user’s travelling details.
            
            So, finally we have created a project which will meet all the expectations of the user and the user can search for anything related to travel hassle free. One of the important things is that we have checked for all the validations wherever it is necessary throughout the project.
<br><a href='https://drive.google.com/file/d/1GxWzC_k2RDkL3yxjo3zomLS511vOrVNl/view?usp=sharing' target='_blank'>Have a Look</a><br>
<a href='https://github.com/Sahil0705/Hiking_Buddies' target='_blank'>Code Repository</a></p>
        </div>
      </div>

      <table align='center'>
        <tr><td><button class="w3-button w3-display-left w3-black" onclick="plusDivs(-1)">&#10094;</button>&nbsp;&nbsp;</td>
        <td><button class="w3-button w3-display-right w3-black" onclick="plusDivs(1)">&#10095;</button></td></tr>
      </table>
      <br><br>
      </div>
    
      <script>
      var slideIndex = 1;
      showDivs(slideIndex);
      
      function plusDivs(n) {
        showDivs(slideIndex += n);
      }
      
      function showDivs(n) {
        var i;
        var x = document.getElementsByClassName("mySlides");
        if (n > x.length) {slideIndex = 1}
        if (n < 1) {slideIndex = x.length}
        for (i = 0; i < x.length; i++) {
           x[i].style.display = "none";  
        }
        x[slideIndex-1].style.display = "block";  
      }
      </script>
      </div>
